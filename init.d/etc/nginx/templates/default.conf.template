# fss-proxy default config (by @allex_wang)
upstream backend.srv {
{{ $servers := split .FSS_UPSTREAM "," }}{{ range $servers }}
  {{ if . }}server {{.}};{{ end }}
{{ end }}
}

{{if .FSS_PROXY}}
upstream frontend.srv {
{{ $servers := split .FSS_PROXY "," }}{{ range $servers }}
  {{ if . }}server {{.}};{{ end }}
{{ end }}
}
{{end}}

server {
  listen {{.FSS_PORT}};
  charset UTF-8;
  server_tokens off;
  root /var/www;

  {{if eq .FSS_SPA "1"}}
  index index.html;
  rewrite ^/*$ /index.html last;
  {{end}}

  set $prefix '';

  location / {
    {{if eq .FSS_SPA "1"}}try_files $resource_path @fallback;
    {{else}}try_files $uri $uri/ @fallback;{{end}}
    expires 30s;
    add_header Content-Security-Policy "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'none';";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Origin-Server $hostname;
    {{if .BUILD_VERSION}}add_header Build-Ver "{{.BUILD_VERSION}}";{{end}}
  }

  location @fallback {
    {{if .FSS_PROXY}}
    include "proxy_set.conf";
    proxy_pass http://frontend.srv;
    {{end}}
  }

  location ~* \.(js|css|eot|woff|woff2|ttf|svg|gif|jpeg|jpg|png|bmp|webp|swf|ico)(\?|$) {
    try_files $uri @fallback;
    expires 30d;
    include static_header_set.conf;
    {{if .BUILD_VERSION}}add_header Build-Ver "{{.BUILD_VERSION}}";{{end}}
  }

  location ^~ /api/ { try_files $uri @$http_upgrade; }
  location ^~ /svc/ { try_files $uri @$http_upgrade; }

  location @websocket {
    rewrite ^.*$ $api_endpoint break;
    proxy_pass http://backend.srv;
    proxy_http_version 1.1;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    add_header X-Via "{{.FSS_UPSTREAM}}";
  }
  location @ {
    include "proxy_set.conf";
    rewrite ^/(?<p>[^/]+)/.*$ $api_endpoint break;
    proxy_pass http://backend.srv;
    proxy_redirect ~^http://(backend.srv|localhost)/(.*) http://$http_host/${p}/$2;
    proxy_intercept_errors on;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    add_header X-Via "{{.FSS_UPSTREAM}}";
  }
}

map $uri $api_endpoint {
  ~^/svc/.* $uri;
  ~^/api/(.*) /$1;
}
